 State 0:
          program ::= * query_language
          query_language ::= * select_statement
          query_language ::= * insert_statement
          query_language ::= * update_statement
          query_language ::= * delete_statement
          select_statement ::= * select_clause where_clause group_clause having_clause order_clause select_limit_clause
          select_clause ::= * SELECT distinct_all column_list FROM associated_name_list join_list_or_null
          insert_statement ::= * INSERT INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          insert_statement ::= * INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          update_statement ::= * update_clause where_clause limit_clause
          update_clause ::= * UPDATE associated_name SET update_item_list
          delete_statement ::= * delete_clause where_clause limit_clause
          delete_clause ::= * DELETE FROM associated_name

                        SELECT shift  147
                        INSERT shift  205
                        UPDATE shift  232
                        DELETE shift  246
                       program accept
                query_language shift  1
              select_statement shift  2
              insert_statement shift  3
              update_statement shift  4
              delete_statement shift  5
                 select_clause shift  6
                 update_clause shift  227
                 delete_clause shift  243

State 1:
      (0) program ::= query_language *

                             $ reduce 0

State 2:
      (1) query_language ::= select_statement *

                             $ reduce 1

State 3:
      (2) query_language ::= insert_statement *

                             $ reduce 2

State 4:
      (3) query_language ::= update_statement *

                             $ reduce 3

State 5:
      (4) query_language ::= delete_statement *

                             $ reduce 4

State 6:
          select_statement ::= select_clause * where_clause group_clause having_clause order_clause select_limit_clause
          where_clause ::= * WHERE expr
     (60) where_clause ::= *

                         WHERE shift  145
                  where_clause shift  7
                     {default} reduce 60

State 7:
          select_statement ::= select_clause where_clause * group_clause having_clause order_clause select_limit_clause
          group_clause ::= * GROUP BY group_list
     (69) group_clause ::= *

                         GROUP shift  138
                  group_clause shift  8
                     {default} reduce 69

State 8:
          select_statement ::= select_clause where_clause group_clause * having_clause order_clause select_limit_clause
          having_clause ::= * HAVING expr
     (74) having_clause ::= *

                        HAVING shift  136
                 having_clause shift  9
                     {default} reduce 74

State 9:
          select_statement ::= select_clause where_clause group_clause having_clause * order_clause select_limit_clause
          order_clause ::= * ORDER BY order_list
     (62) order_clause ::= *

                         ORDER shift  21
                  order_clause shift  10
                     {default} reduce 62

State 10:
          select_statement ::= select_clause where_clause group_clause having_clause order_clause * select_limit_clause
          select_limit_clause ::= * LIMIT integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= * LIMIT integer_or_placeholder OFFSET integer_or_placeholder
     (78) select_limit_clause ::= *

                             $ reduce 78
                         LIMIT shift  12
           select_limit_clause shift  11

State 11:
      (5) select_statement ::= select_clause where_clause group_clause having_clause order_clause select_limit_clause *

                             $ reduce 5

State 12:
          select_limit_clause ::= LIMIT * integer_or_placeholder
          select_limit_clause ::= LIMIT * integer_or_placeholder COMMA integer_or_placeholder
          select_limit_clause ::= LIMIT * integer_or_placeholder OFFSET integer_or_placeholder
          integer_or_placeholder ::= * INTEGER
          integer_or_placeholder ::= * NPLACEHOLDER
          integer_or_placeholder ::= * SPLACEHOLDER

                       INTEGER shift  16
                  NPLACEHOLDER shift  17
                  SPLACEHOLDER shift  18
        integer_or_placeholder shift  13

State 13:
     (75) select_limit_clause ::= LIMIT integer_or_placeholder *
          select_limit_clause ::= LIMIT integer_or_placeholder * COMMA integer_or_placeholder
          select_limit_clause ::= LIMIT integer_or_placeholder * OFFSET integer_or_placeholder

                             $ reduce 75
                         COMMA shift  14
                        OFFSET shift  19

State 14:
          select_limit_clause ::= LIMIT integer_or_placeholder COMMA * integer_or_placeholder
          integer_or_placeholder ::= * INTEGER
          integer_or_placeholder ::= * NPLACEHOLDER
          integer_or_placeholder ::= * SPLACEHOLDER

                       INTEGER shift  16
                  NPLACEHOLDER shift  17
                  SPLACEHOLDER shift  18
        integer_or_placeholder shift  15

State 15:
     (76) select_limit_clause ::= LIMIT integer_or_placeholder COMMA integer_or_placeholder *

                             $ reduce 76

State 16:
     (81) integer_or_placeholder ::= INTEGER *

                     {default} reduce 81

State 17:
     (82) integer_or_placeholder ::= NPLACEHOLDER *

                     {default} reduce 82

State 18:
     (83) integer_or_placeholder ::= SPLACEHOLDER *

                     {default} reduce 83

State 19:
          select_limit_clause ::= LIMIT integer_or_placeholder OFFSET * integer_or_placeholder
          integer_or_placeholder ::= * INTEGER
          integer_or_placeholder ::= * NPLACEHOLDER
          integer_or_placeholder ::= * SPLACEHOLDER

                       INTEGER shift  16
                  NPLACEHOLDER shift  17
                  SPLACEHOLDER shift  18
        integer_or_placeholder shift  20

State 20:
     (77) select_limit_clause ::= LIMIT integer_or_placeholder OFFSET integer_or_placeholder *

                             $ reduce 77

State 21:
          order_clause ::= ORDER * BY order_list

                            BY shift  22

State 22:
          order_clause ::= ORDER BY * order_list
          order_list ::= * order_list COMMA order_item
          order_list ::= * order_item
          order_item ::= * expr
          order_item ::= * expr ASC
          order_item ::= * expr DESC
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  26
                qualified_name shift  109
                    order_list shift  23
                    order_item shift  135
                 function_call shift  92

State 23:
     (61) order_clause ::= ORDER BY order_list *
          order_list ::= order_list * COMMA order_item

                         COMMA shift  24
                     {default} reduce 61

State 24:
          order_list ::= order_list COMMA * order_item
          order_item ::= * expr
          order_item ::= * expr ASC
          order_item ::= * expr DESC
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  26
                qualified_name shift  109
                    order_item shift  25
                 function_call shift  92

State 25:
     (63) order_list ::= order_list COMMA order_item *

                     {default} reduce 63

State 26:
     (65) order_item ::= expr *
          order_item ::= expr * ASC
          order_item ::= expr * DESC
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                           ASC shift  27
                          DESC shift  28
                     {default} reduce 65

State 27:
     (66) order_item ::= expr ASC *

                     {default} reduce 66

State 28:
     (67) order_item ::= expr DESC *

                     {default} reduce 67

State 29:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  134
                qualified_name shift  109
                 function_call shift  92

State 30:
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  31
                qualified_name shift  109
                 function_call shift  92

State 31:
     (84) expr ::= MINUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 84

State 32:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  33
                qualified_name shift  109
                 function_call shift  92

State 33:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
     (86) expr ::= expr PLUS expr *
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 86

State 34:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  35
                qualified_name shift  109
                 function_call shift  92

State 35:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
     (87) expr ::= expr TIMES expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 87

State 36:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  37
                qualified_name shift  109
                 function_call shift  92

State 37:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
     (88) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 88

State 38:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  39
                qualified_name shift  109
                 function_call shift  92

State 39:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
     (89) expr ::= expr MOD expr *
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 89

State 40:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= expr AND * expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  41
                qualified_name shift  109
                 function_call shift  92

State 41:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
     (90) expr ::= expr AND expr *
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 90

State 42:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= expr OR * expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  43
                qualified_name shift  109
                 function_call shift  92

State 43:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (91) expr ::= expr OR expr *
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 91

State 44:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= expr BITWISE_AND * expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  45
                qualified_name shift  109
                 function_call shift  92

State 45:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
     (92) expr ::= expr BITWISE_AND expr *
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 92

State 46:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= expr BITWISE_OR * expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  47
                qualified_name shift  109
                 function_call shift  92

State 47:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
     (93) expr ::= expr BITWISE_OR expr *
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 93

State 48:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= expr BITWISE_XOR * expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  49
                qualified_name shift  109
                 function_call shift  92

State 49:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
     (94) expr ::= expr BITWISE_XOR expr *
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 94

State 50:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= expr EQUALS * expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  51
                qualified_name shift  109
                 function_call shift  92

State 51:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
     (95) expr ::= expr EQUALS expr *
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 95

State 52:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= expr NOTEQUALS * expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  53
                qualified_name shift  109
                 function_call shift  92

State 53:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
     (96) expr ::= expr NOTEQUALS expr *
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 96

State 54:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= expr LESS * expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  55
                qualified_name shift  109
                 function_call shift  92

State 55:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
     (97) expr ::= expr LESS expr *
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 97

State 56:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= expr GREATER * expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  57
                qualified_name shift  109
                 function_call shift  92

State 57:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
     (98) expr ::= expr GREATER expr *
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 98

State 58:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= expr GREATEREQUAL * expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  59
                qualified_name shift  109
                 function_call shift  92

State 59:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
     (99) expr ::= expr GREATEREQUAL expr *
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 99

State 60:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= expr LESSEQUAL * expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  61
                qualified_name shift  109
                 function_call shift  92

State 61:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
    (100) expr ::= expr LESSEQUAL expr *
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 100

State 62:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= expr LIKE * expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  63
                qualified_name shift  109
                 function_call shift  92

State 63:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
    (101) expr ::= expr LIKE expr *
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 101

State 64:
          expr ::= expr NOT * LIKE expr
          expr ::= expr NOT * ILIKE expr
          expr ::= expr NOT * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE

                          LIKE shift  65
                         ILIKE shift  128
                            IN shift  130

State 65:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= expr NOT LIKE * expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  66
                qualified_name shift  109
                 function_call shift  92

State 66:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
    (102) expr ::= expr NOT LIKE expr *
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           NOT shift  64
                     {default} reduce 102

State 67:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= expr ILIKE * expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  68
                qualified_name shift  109
                 function_call shift  92

State 68:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
    (103) expr ::= expr ILIKE expr *
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 103

State 69:
          expr ::= expr IN * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  70

State 70:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr IN PARENTHESES_OPEN * argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          argument_list ::= * argument_list COMMA argument_item
          argument_list ::= * argument_item
          argument_item ::= * TIMES
          argument_item ::= * expr
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  101
                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  71
                qualified_name shift  109
                 argument_list shift  126
                 function_call shift  92
                 argument_item shift  118

State 71:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
    (119) argument_item ::= expr *
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 119

State 72:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= expr AGAINST * expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  73
                qualified_name shift  109
                 function_call shift  92

State 73:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
    (107) expr ::= expr AGAINST expr *
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 107

State 74:
          expr ::= expr IS * NULL
          expr ::= expr IS * NOT NULL

                           NOT shift  76
                          NULL shift  75

State 75:
    (120) expr ::= expr IS NULL *

                     {default} reduce 120

State 76:
          expr ::= expr IS NOT * NULL

                          NULL shift  77

State 77:
    (121) expr ::= expr IS NOT NULL *

                     {default} reduce 121

State 78:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= expr BETWEEN * expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  79
                qualified_name shift  109
                 function_call shift  92

State 79:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr
    (122) expr ::= expr BETWEEN expr *

                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 122

State 80:
          expr ::= CAST * PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  81

State 81:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= CAST PARENTHESES_OPEN * expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  82
                qualified_name shift  109
                 function_call shift  92

State 82:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= CAST PARENTHESES_OPEN expr * AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                            AS shift  83

State 83:
          expr ::= CAST PARENTHESES_OPEN expr AS * IDENTIFIER PARENTHESES_CLOSE

                    IDENTIFIER shift  84

State 84:
          expr ::= CAST PARENTHESES_OPEN expr AS IDENTIFIER * PARENTHESES_CLOSE

             PARENTHESES_CLOSE shift  85

State 85:
    (108) expr ::= CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE *

                     {default} reduce 108

State 86:
          expr ::= CONVERT * PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  87

State 87:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= CONVERT PARENTHESES_OPEN * expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  88
                qualified_name shift  109
                 function_call shift  92

State 88:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= CONVERT PARENTHESES_OPEN expr * USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                         USING shift  89

State 89:
          expr ::= CONVERT PARENTHESES_OPEN expr USING * IDENTIFIER PARENTHESES_CLOSE

                    IDENTIFIER shift  90

State 90:
          expr ::= CONVERT PARENTHESES_OPEN expr USING IDENTIFIER * PARENTHESES_CLOSE

             PARENTHESES_CLOSE shift  91

State 91:
    (109) expr ::= CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE *

                     {default} reduce 109

State 92:
    (110) expr ::= function_call *

                     {default} reduce 110

State 93:
          function_call ::= IDENTIFIER * PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          qualified_name ::= IDENTIFIER * COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= IDENTIFIER * COLON IDENTIFIER
          qualified_name ::= IDENTIFIER * DOT IDENTIFIER
    (138) qualified_name ::= IDENTIFIER *

                           DOT shift  124
              PARENTHESES_OPEN shift  94
                         COLON shift  120
                     {default} reduce 138

State 94:
          function_call ::= IDENTIFIER PARENTHESES_OPEN * distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          distinct_or_null ::= * DISTINCT
    (113) distinct_or_null ::= *

                      DISTINCT shift  119
              distinct_or_null shift  95
                     {default} reduce 113

State 95:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          function_call ::= IDENTIFIER PARENTHESES_OPEN distinct_or_null * argument_list_or_null PARENTHESES_CLOSE
          argument_list_or_null ::= * argument_list
    (115) argument_list_or_null ::= *
          argument_list ::= * argument_list COMMA argument_item
          argument_list ::= * argument_item
          argument_item ::= * TIMES
          argument_item ::= * expr
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  101
                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
             PARENTHESES_CLOSE reduce 115
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  71
                qualified_name shift  109
                 argument_list shift  98
                 function_call shift  92
         argument_list_or_null shift  96
                 argument_item shift  118

State 96:
          function_call ::= IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null * PARENTHESES_CLOSE

             PARENTHESES_CLOSE shift  97

State 97:
    (111) function_call ::= IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE *

                     {default} reduce 111

State 98:
    (114) argument_list_or_null ::= argument_list *
          argument_list ::= argument_list * COMMA argument_item

                         COMMA shift  99
             PARENTHESES_CLOSE reduce 114

State 99:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          argument_list ::= argument_list COMMA * argument_item
          argument_item ::= * TIMES
          argument_item ::= * expr
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  101
                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  71
                qualified_name shift  109
                 function_call shift  92
                 argument_item shift  100

State 100:
    (116) argument_list ::= argument_list COMMA argument_item *

                     {default} reduce 116

State 101:
    (118) argument_item ::= TIMES *

                     {default} reduce 118

State 102:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  103
                qualified_name shift  109
                 function_call shift  92

State 103:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr
    (123) expr ::= NOT expr *

                           NOT shift  64
                     {default} reduce 123

State 104:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= BITWISE_NOT * expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  105
                qualified_name shift  109
                 function_call shift  92

State 105:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr
    (124) expr ::= BITWISE_NOT expr *

                           NOT shift  64
                     {default} reduce 124

State 106:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= PARENTHESES_OPEN * expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  107
                qualified_name shift  109
                 function_call shift  92

State 107:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr
          expr ::= PARENTHESES_OPEN expr * PARENTHESES_CLOSE

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
             PARENTHESES_CLOSE shift  108

State 108:
    (125) expr ::= PARENTHESES_OPEN expr PARENTHESES_CLOSE *

                     {default} reduce 125

State 109:
    (126) expr ::= qualified_name *

                     {default} reduce 126

State 110:
    (127) expr ::= INTEGER *

                     {default} reduce 127

State 111:
    (128) expr ::= STRING *

                     {default} reduce 128

State 112:
    (129) expr ::= DOUBLE *

                     {default} reduce 129

State 113:
    (130) expr ::= NULL *

                     {default} reduce 130

State 114:
    (131) expr ::= TRUE *

                     {default} reduce 131

State 115:
    (132) expr ::= FALSE *

                     {default} reduce 132

State 116:
    (133) expr ::= NPLACEHOLDER *

                     {default} reduce 133

State 117:
    (134) expr ::= SPLACEHOLDER *

                     {default} reduce 134

State 118:
    (117) argument_list ::= argument_item *

                     {default} reduce 117

State 119:
    (112) distinct_or_null ::= DISTINCT *

                     {default} reduce 112

State 120:
          qualified_name ::= IDENTIFIER COLON * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= IDENTIFIER COLON * IDENTIFIER

                    IDENTIFIER shift  121

State 121:
          qualified_name ::= IDENTIFIER COLON IDENTIFIER * DOT IDENTIFIER
    (136) qualified_name ::= IDENTIFIER COLON IDENTIFIER *

                           DOT shift  122
                     {default} reduce 136

State 122:
          qualified_name ::= IDENTIFIER COLON IDENTIFIER DOT * IDENTIFIER

                    IDENTIFIER shift  123

State 123:
    (135) qualified_name ::= IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER *

                     {default} reduce 135

State 124:
          qualified_name ::= IDENTIFIER DOT * IDENTIFIER

                    IDENTIFIER shift  125

State 125:
    (137) qualified_name ::= IDENTIFIER DOT IDENTIFIER *

                     {default} reduce 137

State 126:
          expr ::= expr IN PARENTHESES_OPEN argument_list * PARENTHESES_CLOSE
          argument_list ::= argument_list * COMMA argument_item

                         COMMA shift  99
             PARENTHESES_CLOSE shift  127

State 127:
    (105) expr ::= expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE *

                     {default} reduce 105

State 128:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= expr NOT ILIKE * expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  129
                qualified_name shift  109
                 function_call shift  92

State 129:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
    (104) expr ::= expr NOT ILIKE expr *
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                           NOT shift  64
                     {default} reduce 104

State 130:
          expr ::= expr NOT IN * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  131

State 131:
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr NOT IN PARENTHESES_OPEN * argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          argument_list ::= * argument_list COMMA argument_item
          argument_list ::= * argument_item
          argument_item ::= * TIMES
          argument_item ::= * expr
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  101
                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  71
                qualified_name shift  109
                 argument_list shift  132
                 function_call shift  92
                 argument_item shift  118

State 132:
          expr ::= expr NOT IN PARENTHESES_OPEN argument_list * PARENTHESES_CLOSE
          argument_list ::= argument_list * COMMA argument_item

                         COMMA shift  99
             PARENTHESES_CLOSE shift  133

State 133:
    (106) expr ::= expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE *

                     {default} reduce 106

State 134:
          expr ::= expr * MINUS expr
     (85) expr ::= expr MINUS expr *
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 85

State 135:
     (64) order_list ::= order_item *

                     {default} reduce 64

State 136:
          having_clause ::= HAVING * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  137
                qualified_name shift  109
                 function_call shift  92

State 137:
     (73) having_clause ::= HAVING expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 73

State 138:
          group_clause ::= GROUP * BY group_list

                            BY shift  139

State 139:
          group_clause ::= GROUP BY * group_list
          group_list ::= * group_list COMMA group_item
          group_list ::= * group_item
          group_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  143
                qualified_name shift  109
                    group_list shift  140
                    group_item shift  144
                 function_call shift  92

State 140:
     (68) group_clause ::= GROUP BY group_list *
          group_list ::= group_list * COMMA group_item

                         COMMA shift  141
                     {default} reduce 68

State 141:
          group_list ::= group_list COMMA * group_item
          group_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  143
                qualified_name shift  109
                    group_item shift  142
                 function_call shift  92

State 142:
     (70) group_list ::= group_list COMMA group_item *

                     {default} reduce 70

State 143:
     (72) group_item ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 72

State 144:
     (71) group_list ::= group_item *

                     {default} reduce 71

State 145:
          where_clause ::= WHERE * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  146
                qualified_name shift  109
                 function_call shift  92

State 146:
     (59) where_clause ::= WHERE expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 59

State 147:
          select_clause ::= SELECT * distinct_all column_list FROM associated_name_list join_list_or_null
          distinct_all ::= * DISTINCT
          distinct_all ::= * ALL
      (9) distinct_all ::= *

                      DISTINCT shift  203
                           ALL shift  204
                  distinct_all shift  148
                     {default} reduce 9

State 148:
          select_clause ::= SELECT distinct_all * column_list FROM associated_name_list join_list_or_null
          column_list ::= * column_list COMMA column_item
          column_list ::= * column_item
          column_item ::= * TIMES
          column_item ::= * IDENTIFIER DOT TIMES
          column_item ::= * expr AS IDENTIFIER
          column_item ::= * expr IDENTIFIER
          column_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  194
                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  195
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                   column_list shift  149
                   column_item shift  202
                          expr shift  198
                qualified_name shift  109
                 function_call shift  92

State 149:
          select_clause ::= SELECT distinct_all column_list * FROM associated_name_list join_list_or_null
          column_list ::= column_list * COMMA column_item

                         COMMA shift  192
                          FROM shift  150

State 150:
          select_clause ::= SELECT distinct_all column_list FROM * associated_name_list join_list_or_null
          associated_name_list ::= * associated_name_list COMMA associated_name
          associated_name_list ::= * associated_name
          associated_name ::= * aliased_or_qualified_name AS IDENTIFIER
          associated_name ::= * aliased_or_qualified_name IDENTIFIER
          associated_name ::= * aliased_or_qualified_name
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  160
          associated_name_list shift  151
               associated_name shift  191
     aliased_or_qualified_name shift  155
                qualified_name shift  159

State 151:
          select_clause ::= SELECT distinct_all column_list FROM associated_name_list * join_list_or_null
          associated_name_list ::= associated_name_list * COMMA associated_name
          join_list_or_null ::= * join_list
     (20) join_list_or_null ::= *
          join_list ::= * join_list join_item
          join_list ::= * join_item
          join_item ::= * join_clause
          join_clause ::= * join_type aliased_or_qualified_name join_associated_name join_conditions
          join_type ::= * INNER JOIN
          join_type ::= * CROSS JOIN
          join_type ::= * LEFT OUTER JOIN
          join_type ::= * LEFT JOIN
          join_type ::= * RIGHT OUTER JOIN
          join_type ::= * RIGHT JOIN
          join_type ::= * FULL OUTER JOIN
          join_type ::= * FULL JOIN
          join_type ::= * JOIN

                         COMMA shift  153
                         INNER shift  173
                          JOIN shift  189
                         CROSS shift  175
                          LEFT shift  177
                         RIGHT shift  181
                          FULL shift  185
             join_list_or_null shift  152
                     join_list shift  161
                     join_item shift  190
                   join_clause shift  163
                     join_type shift  164
                     {default} reduce 20

State 152:
      (6) select_clause ::= SELECT distinct_all column_list FROM associated_name_list join_list_or_null *

                     {default} reduce 6

State 153:
          associated_name_list ::= associated_name_list COMMA * associated_name
          associated_name ::= * aliased_or_qualified_name AS IDENTIFIER
          associated_name ::= * aliased_or_qualified_name IDENTIFIER
          associated_name ::= * aliased_or_qualified_name
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  160
               associated_name shift  154
     aliased_or_qualified_name shift  155
                qualified_name shift  159

State 154:
     (17) associated_name_list ::= associated_name_list COMMA associated_name *

                     {default} reduce 17

State 155:
          associated_name ::= aliased_or_qualified_name * AS IDENTIFIER
          associated_name ::= aliased_or_qualified_name * IDENTIFIER
     (57) associated_name ::= aliased_or_qualified_name *

                    IDENTIFIER shift  158
                            AS shift  156
                     {default} reduce 57

State 156:
          associated_name ::= aliased_or_qualified_name AS * IDENTIFIER

                    IDENTIFIER shift  157

State 157:
     (55) associated_name ::= aliased_or_qualified_name AS IDENTIFIER *

                     {default} reduce 55

State 158:
     (56) associated_name ::= aliased_or_qualified_name IDENTIFIER *

                     {default} reduce 56

State 159:
     (58) aliased_or_qualified_name ::= qualified_name *

                     {default} reduce 58

State 160:
          qualified_name ::= IDENTIFIER * COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= IDENTIFIER * COLON IDENTIFIER
          qualified_name ::= IDENTIFIER * DOT IDENTIFIER
    (138) qualified_name ::= IDENTIFIER *

                           DOT shift  124
                         COLON shift  120
                     {default} reduce 138

State 161:
     (19) join_list_or_null ::= join_list *
          join_list ::= join_list * join_item
          join_item ::= * join_clause
          join_clause ::= * join_type aliased_or_qualified_name join_associated_name join_conditions
          join_type ::= * INNER JOIN
          join_type ::= * CROSS JOIN
          join_type ::= * LEFT OUTER JOIN
          join_type ::= * LEFT JOIN
          join_type ::= * RIGHT OUTER JOIN
          join_type ::= * RIGHT JOIN
          join_type ::= * FULL OUTER JOIN
          join_type ::= * FULL JOIN
          join_type ::= * JOIN

                         INNER shift  173
                          JOIN shift  189
                         CROSS shift  175
                          LEFT shift  177
                         RIGHT shift  181
                          FULL shift  185
                     join_item shift  162
                   join_clause shift  163
                     join_type shift  164
                     {default} reduce 19

State 162:
     (21) join_list ::= join_list join_item *

                     {default} reduce 21

State 163:
     (23) join_item ::= join_clause *

                     {default} reduce 23

State 164:
          join_clause ::= join_type * aliased_or_qualified_name join_associated_name join_conditions
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  160
     aliased_or_qualified_name shift  165
                qualified_name shift  159

State 165:
          join_clause ::= join_type aliased_or_qualified_name * join_associated_name join_conditions
          join_associated_name ::= * AS IDENTIFIER
          join_associated_name ::= * IDENTIFIER
     (27) join_associated_name ::= *

                    IDENTIFIER shift  172
                            AS shift  170
          join_associated_name shift  166
                     {default} reduce 27

State 166:
          join_clause ::= join_type aliased_or_qualified_name join_associated_name * join_conditions
          join_conditions ::= * ON expr
     (38) join_conditions ::= *

                            ON shift  168
               join_conditions shift  167
                     {default} reduce 38

State 167:
     (24) join_clause ::= join_type aliased_or_qualified_name join_associated_name join_conditions *

                     {default} reduce 24

State 168:
          join_conditions ::= ON * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  169
                qualified_name shift  109
                 function_call shift  92

State 169:
     (37) join_conditions ::= ON expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 37

State 170:
          join_associated_name ::= AS * IDENTIFIER

                    IDENTIFIER shift  171

State 171:
     (25) join_associated_name ::= AS IDENTIFIER *

                     {default} reduce 25

State 172:
     (26) join_associated_name ::= IDENTIFIER *

                     {default} reduce 26

State 173:
          join_type ::= INNER * JOIN

                          JOIN shift  174

State 174:
     (28) join_type ::= INNER JOIN *

                    IDENTIFIER reduce 28

State 175:
          join_type ::= CROSS * JOIN

                          JOIN shift  176

State 176:
     (29) join_type ::= CROSS JOIN *

                    IDENTIFIER reduce 29

State 177:
          join_type ::= LEFT * OUTER JOIN
          join_type ::= LEFT * JOIN

                          JOIN shift  180
                         OUTER shift  178

State 178:
          join_type ::= LEFT OUTER * JOIN

                          JOIN shift  179

State 179:
     (30) join_type ::= LEFT OUTER JOIN *

                    IDENTIFIER reduce 30

State 180:
     (31) join_type ::= LEFT JOIN *

                    IDENTIFIER reduce 31

State 181:
          join_type ::= RIGHT * OUTER JOIN
          join_type ::= RIGHT * JOIN

                          JOIN shift  184
                         OUTER shift  182

State 182:
          join_type ::= RIGHT OUTER * JOIN

                          JOIN shift  183

State 183:
     (32) join_type ::= RIGHT OUTER JOIN *

                    IDENTIFIER reduce 32

State 184:
     (33) join_type ::= RIGHT JOIN *

                    IDENTIFIER reduce 33

State 185:
          join_type ::= FULL * OUTER JOIN
          join_type ::= FULL * JOIN

                          JOIN shift  188
                         OUTER shift  186

State 186:
          join_type ::= FULL OUTER * JOIN

                          JOIN shift  187

State 187:
     (34) join_type ::= FULL OUTER JOIN *

                    IDENTIFIER reduce 34

State 188:
     (35) join_type ::= FULL JOIN *

                    IDENTIFIER reduce 35

State 189:
     (36) join_type ::= JOIN *

                    IDENTIFIER reduce 36

State 190:
     (22) join_list ::= join_item *

                     {default} reduce 22

State 191:
     (18) associated_name_list ::= associated_name *

                     {default} reduce 18

State 192:
          column_list ::= column_list COMMA * column_item
          column_item ::= * TIMES
          column_item ::= * IDENTIFIER DOT TIMES
          column_item ::= * expr AS IDENTIFIER
          column_item ::= * expr IDENTIFIER
          column_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         TIMES shift  194
                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  195
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                   column_item shift  193
                          expr shift  198
                qualified_name shift  109
                 function_call shift  92

State 193:
     (10) column_list ::= column_list COMMA column_item *

                     {default} reduce 10

State 194:
     (12) column_item ::= TIMES *

                     {default} reduce 12

State 195:
          column_item ::= IDENTIFIER * DOT TIMES
          function_call ::= IDENTIFIER * PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          qualified_name ::= IDENTIFIER * COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= IDENTIFIER * COLON IDENTIFIER
          qualified_name ::= IDENTIFIER * DOT IDENTIFIER
    (138) qualified_name ::= IDENTIFIER *

                           DOT shift  196
              PARENTHESES_OPEN shift  94
                         COLON shift  120
                     {default} reduce 138

State 196:
          column_item ::= IDENTIFIER DOT * TIMES
          qualified_name ::= IDENTIFIER DOT * IDENTIFIER

                         TIMES shift  197
                    IDENTIFIER shift  125

State 197:
     (13) column_item ::= IDENTIFIER DOT TIMES *

                     {default} reduce 13

State 198:
          column_item ::= expr * AS IDENTIFIER
          column_item ::= expr * IDENTIFIER
     (16) column_item ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                    IDENTIFIER shift  201
                            AS shift  199
                     {default} reduce 16

State 199:
          column_item ::= expr AS * IDENTIFIER

                    IDENTIFIER shift  200

State 200:
     (14) column_item ::= expr AS IDENTIFIER *

                     {default} reduce 14

State 201:
     (15) column_item ::= expr IDENTIFIER *

                     {default} reduce 15

State 202:
     (11) column_list ::= column_item *

                     {default} reduce 11

State 203:
      (7) distinct_all ::= DISTINCT *

                     {default} reduce 7

State 204:
      (8) distinct_all ::= ALL *

                     {default} reduce 8

State 205:
          insert_statement ::= INSERT * INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          insert_statement ::= INSERT * INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE

                          INTO shift  206

State 206:
          insert_statement ::= INSERT INTO * aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          insert_statement ::= INSERT INTO * aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  160
     aliased_or_qualified_name shift  207
                qualified_name shift  159

State 207:
          insert_statement ::= INSERT INTO aliased_or_qualified_name * VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          insert_statement ::= INSERT INTO aliased_or_qualified_name * PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE

                        VALUES shift  208
              PARENTHESES_OPEN shift  216

State 208:
          insert_statement ::= INSERT INTO aliased_or_qualified_name VALUES * PARENTHESES_OPEN values_list PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  209

State 209:
          insert_statement ::= INSERT INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN * values_list PARENTHESES_CLOSE
          values_list ::= * values_list COMMA value_item
          values_list ::= * value_item
          value_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  214
                   values_list shift  210
                    value_item shift  215
                qualified_name shift  109
                 function_call shift  92

State 210:
          insert_statement ::= INSERT INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list * PARENTHESES_CLOSE
          values_list ::= values_list * COMMA value_item

                         COMMA shift  212
             PARENTHESES_CLOSE shift  211

State 211:
     (39) insert_statement ::= INSERT INTO aliased_or_qualified_name VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE *

                             $ reduce 39

State 212:
          values_list ::= values_list COMMA * value_item
          value_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  214
                    value_item shift  213
                qualified_name shift  109
                 function_call shift  92

State 213:
     (41) values_list ::= values_list COMMA value_item *

                     {default} reduce 41

State 214:
     (43) value_item ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 43

State 215:
     (42) values_list ::= value_item *

                     {default} reduce 42

State 216:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN * field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          field_list ::= * field_list COMMA field_item
          field_list ::= * field_item
          field_item ::= * IDENTIFIER

                    IDENTIFIER shift  225
                    field_list shift  217
                    field_item shift  226

State 217:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list * PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE
          field_list ::= field_list * COMMA field_item

                         COMMA shift  223
             PARENTHESES_CLOSE shift  218

State 218:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE * VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE

                        VALUES shift  219

State 219:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES * PARENTHESES_OPEN values_list PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  220

State 220:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN * values_list PARENTHESES_CLOSE
          values_list ::= * values_list COMMA value_item
          values_list ::= * value_item
          value_item ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  214
                   values_list shift  221
                    value_item shift  215
                qualified_name shift  109
                 function_call shift  92

State 221:
          insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list * PARENTHESES_CLOSE
          values_list ::= values_list * COMMA value_item

                         COMMA shift  212
             PARENTHESES_CLOSE shift  222

State 222:
     (40) insert_statement ::= INSERT INTO aliased_or_qualified_name PARENTHESES_OPEN field_list PARENTHESES_CLOSE VALUES PARENTHESES_OPEN values_list PARENTHESES_CLOSE *

                             $ reduce 40

State 223:
          field_list ::= field_list COMMA * field_item
          field_item ::= * IDENTIFIER

                    IDENTIFIER shift  225
                    field_item shift  224

State 224:
     (44) field_list ::= field_list COMMA field_item *

                     {default} reduce 44

State 225:
     (46) field_item ::= IDENTIFIER *

                     {default} reduce 46

State 226:
     (45) field_list ::= field_item *

                     {default} reduce 45

State 227:
          update_statement ::= update_clause * where_clause limit_clause
          where_clause ::= * WHERE expr
     (60) where_clause ::= *

                         WHERE shift  145
                  where_clause shift  228
                     {default} reduce 60

State 228:
          update_statement ::= update_clause where_clause * limit_clause
          limit_clause ::= * LIMIT integer_or_placeholder
     (80) limit_clause ::= *

                             $ reduce 80
                         LIMIT shift  230
                  limit_clause shift  229

State 229:
     (47) update_statement ::= update_clause where_clause limit_clause *

                             $ reduce 47

State 230:
          limit_clause ::= LIMIT * integer_or_placeholder
          integer_or_placeholder ::= * INTEGER
          integer_or_placeholder ::= * NPLACEHOLDER
          integer_or_placeholder ::= * SPLACEHOLDER

                       INTEGER shift  16
                  NPLACEHOLDER shift  17
                  SPLACEHOLDER shift  18
        integer_or_placeholder shift  231

State 231:
     (79) limit_clause ::= LIMIT integer_or_placeholder *

                             $ reduce 79

State 232:
          update_clause ::= UPDATE * associated_name SET update_item_list
          associated_name ::= * aliased_or_qualified_name AS IDENTIFIER
          associated_name ::= * aliased_or_qualified_name IDENTIFIER
          associated_name ::= * aliased_or_qualified_name
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  160
               associated_name shift  233
     aliased_or_qualified_name shift  155
                qualified_name shift  159

State 233:
          update_clause ::= UPDATE associated_name * SET update_item_list

                           SET shift  234

State 234:
          update_clause ::= UPDATE associated_name SET * update_item_list
          update_item_list ::= * update_item_list COMMA update_item
          update_item_list ::= * update_item
          update_item ::= * qualified_name EQUALS new_value
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  160
              update_item_list shift  235
                   update_item shift  242
                qualified_name shift  238

State 235:
     (48) update_clause ::= UPDATE associated_name SET update_item_list *
          update_item_list ::= update_item_list * COMMA update_item

                         COMMA shift  236
                     {default} reduce 48

State 236:
          update_item_list ::= update_item_list COMMA * update_item
          update_item ::= * qualified_name EQUALS new_value
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  160
                   update_item shift  237
                qualified_name shift  238

State 237:
     (49) update_item_list ::= update_item_list COMMA update_item *

                     {default} reduce 49

State 238:
          update_item ::= qualified_name * EQUALS new_value

                        EQUALS shift  239

State 239:
          update_item ::= qualified_name EQUALS * new_value
          new_value ::= * expr
          expr ::= * MINUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr BITWISE_AND expr
          expr ::= * expr BITWISE_OR expr
          expr ::= * expr BITWISE_XOR expr
          expr ::= * expr EQUALS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr LIKE expr
          expr ::= * expr NOT LIKE expr
          expr ::= * expr ILIKE expr
          expr ::= * expr NOT ILIKE expr
          expr ::= * expr IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= * expr AGAINST expr
          expr ::= * CAST PARENTHESES_OPEN expr AS IDENTIFIER PARENTHESES_CLOSE
          expr ::= * CONVERT PARENTHESES_OPEN expr USING IDENTIFIER PARENTHESES_CLOSE
          expr ::= * function_call
          function_call ::= * IDENTIFIER PARENTHESES_OPEN distinct_or_null argument_list_or_null PARENTHESES_CLOSE
          expr ::= * expr IS NULL
          expr ::= * expr IS NOT NULL
          expr ::= * expr BETWEEN expr
          expr ::= * NOT expr
          expr ::= * BITWISE_NOT expr
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * qualified_name
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * TRUE
          expr ::= * FALSE
          expr ::= * NPLACEHOLDER
          expr ::= * SPLACEHOLDER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                         MINUS shift  30
                           NOT shift  102
                   BITWISE_NOT shift  104
                    IDENTIFIER shift  93
              PARENTHESES_OPEN shift  106
                       INTEGER shift  110
                  NPLACEHOLDER shift  116
                  SPLACEHOLDER shift  117
                          CAST shift  80
                       CONVERT shift  86
                          NULL shift  113
                        STRING shift  111
                        DOUBLE shift  112
                          TRUE shift  114
                         FALSE shift  115
                          expr shift  241
                qualified_name shift  109
                     new_value shift  240
                 function_call shift  92

State 240:
     (51) update_item ::= qualified_name EQUALS new_value *

                     {default} reduce 51

State 241:
     (52) new_value ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * BITWISE_AND expr
          expr ::= expr * BITWISE_OR expr
          expr ::= expr * BITWISE_XOR expr
          expr ::= expr * EQUALS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * LIKE expr
          expr ::= expr * NOT LIKE expr
          expr ::= expr * ILIKE expr
          expr ::= expr * NOT ILIKE expr
          expr ::= expr * IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * NOT IN PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          expr ::= expr * AGAINST expr
          expr ::= expr * IS NULL
          expr ::= expr * IS NOT NULL
          expr ::= expr * BETWEEN expr

                       AGAINST shift  72
                       BETWEEN shift  78
                        EQUALS shift  50
                     NOTEQUALS shift  52
                          LESS shift  54
                       GREATER shift  56
                  GREATEREQUAL shift  58
                     LESSEQUAL shift  60
                           AND shift  40
                            OR shift  42
                          LIKE shift  62
                         ILIKE shift  67
                   BITWISE_AND shift  44
                    BITWISE_OR shift  46
                   BITWISE_XOR shift  48
                        DIVIDE shift  36
                         TIMES shift  34
                           MOD shift  38
                          PLUS shift  32
                         MINUS shift  29
                            IS shift  74
                            IN shift  69
                           NOT shift  64
                     {default} reduce 52

State 242:
     (50) update_item_list ::= update_item *

                     {default} reduce 50

State 243:
          delete_statement ::= delete_clause * where_clause limit_clause
          where_clause ::= * WHERE expr
     (60) where_clause ::= *

                         WHERE shift  145
                  where_clause shift  244
                     {default} reduce 60

State 244:
          delete_statement ::= delete_clause where_clause * limit_clause
          limit_clause ::= * LIMIT integer_or_placeholder
     (80) limit_clause ::= *

                             $ reduce 80
                         LIMIT shift  230
                  limit_clause shift  245

State 245:
     (53) delete_statement ::= delete_clause where_clause limit_clause *

                             $ reduce 53

State 246:
          delete_clause ::= DELETE * FROM associated_name

                          FROM shift  247

State 247:
          delete_clause ::= DELETE FROM * associated_name
          associated_name ::= * aliased_or_qualified_name AS IDENTIFIER
          associated_name ::= * aliased_or_qualified_name IDENTIFIER
          associated_name ::= * aliased_or_qualified_name
          aliased_or_qualified_name ::= * qualified_name
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER COLON IDENTIFIER
          qualified_name ::= * IDENTIFIER DOT IDENTIFIER
          qualified_name ::= * IDENTIFIER

                    IDENTIFIER shift  160
               associated_name shift  248
     aliased_or_qualified_name shift  155
                qualified_name shift  159

State 248:
     (54) delete_clause ::= DELETE FROM associated_name *

                     {default} reduce 54

